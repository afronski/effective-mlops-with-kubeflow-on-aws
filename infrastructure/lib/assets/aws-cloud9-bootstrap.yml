schemaVersion: '2.2'
description: Bootstrap AWS Cloud9 EC2 Instance
mainSteps:
- action: aws:runShellScript
  name: BootstrappingIDE
  inputs:
    runCommand:
    - "#!/bin/bash"

    - echo '=== PREPARE ENV ==='
    - date
    - echo LANG=en_US.utf-8 >> /etc/environment
    - echo LC_ALL=en_US.UTF-8 >> /etc/environment
    - . /home/ec2-user/.bashrc

    - echo '=== INSTALL CORE DEPENDENCIES ==='
    - yum -y remove aws-cli
    - yum -y install amazon-linux-extras
    - yum -y install sqlite curl wget telnet jq strace tree gcc openssl-devel glibc-static python3 python3-pip gettext bash-completion

    - echo '=== INSTALL AND CONFIGURE AWS CLI ==='

    - sudo -i -u ec2-user bash -c "pip install --user -U boto boto3 botocore awscli aws-sam-cli"
    - sudo -i -u ec2-user bash -c "pip3 install --user -U boto boto3 botocore awscli aws-sam-cli"

    - mkdir -p /home/ec2-user/.aws
    - echo '[default]' > /home/ec2-user/.aws/config
    - echo 'region = eu-west-1' >> /home/ec2-user/.aws/config
    - echo 'output = json' >> /home/ec2-user/.aws/config
    - chmod 600 /home/ec2-user/.aws/config
    - rm -rf /home/ec2-user/.aws/credentials

    - pip install boto boto3 botocore awscli
    - pip3 install boto boto3 botocore awscli

    - mkdir -p /rooot/.aws
    - echo '[default]' > /rooot/.aws/config
    - echo 'region = eu-west-1' >> /rooot/.aws/config
    - echo 'output = json' >> /rooot/.aws/config
    - chmod 600 /rooot/.aws/config
    - rm -rf /root/.aws/credentials

    - echo '=== RESIZE DISK ==='
    - |
      SIZE=30
      REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document/ | jq -r .region)
      INSTANCEID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
      VOLUMEID=$(aws ec2 describe-instances \
        --instance-id $INSTANCEID \
        --query "Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.VolumeId" \
        --output text --region $REGION)
      aws ec2 modify-volume --volume-id $VOLUMEID --size $SIZE --region $REGION
      while [ \
        "$(aws ec2 describe-volumes-modifications \
          --volume-id $VOLUMEID \
          --filters Name=modification-state,Values="optimizing","completed" \
          --query "length(VolumesModifications)"\
          --output text --region $REGION)" != "1" ]; do
      sleep 1
      done
      if [ $(readlink -f /dev/xvda) = "/dev/xvda" ]
      then
        sudo growpart /dev/xvda 1
        STR=$(cat /etc/os-release)
        SUB="VERSION_ID=\"2\""
        if [[ "$STR" == *"$SUB"* ]]
        then
          sudo xfs_growfs -d /
        else
          sudo resize2fs /dev/xvda1
        fi
      else
        sudo growpart /dev/nvme0n1 1
        STR=$(cat /etc/os-release)
        SUB="VERSION_ID=\"2\""
        if [[ "$STR" == *"$SUB"* ]]
        then
          sudo xfs_growfs -d /
        else
          sudo resize2fs /dev/nvme0n1p1
        fi
      fi

    - echo '=== INSTALL AND CONFIGURE SOFTWARE ==='
    - export PATH=$PATH:/usr/bin

    - echo "fs.inotify.max_user_watches=524288" >> /etc/sysctl.conf && sysctl -p

    - sudo -i -u ec2-user bash -c "source /home/ec2-user/.nvm/nvm.sh && nvm install 16.10.0"
    - sudo -i -u ec2-user bash -c "source /home/ec2-user/.nvm/nvm.sh && nvm use 16.10.0 && nvm alias default 16.10.0"

    - sudo -i -u ec2-user bash -c "npm install --global npm"
    - sudo -i -u ec2-user bash -c "npm install --global npm typescript aws-cdk serverless"

    - echo 'complete -C "$HOME/.local/bin/aws_completer" aws' >> /home/ec2-user/.bashrc

    - curl --silent --location -o /usr/bin/kubectl "https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl"
    - chmod +x /usr/bin/kubectl
    - sudo -i -u ec2-user bash -c "kubectl completion bash >> ~/.bash_completion"

    - curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.70.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
    - mv /tmp/eksctl /usr/bin
    - sudo -H -u ec2-user bash -c "eksctl completion bash >> ~/.bash_completion"

    - curl --silent --location "https://github.com/kubeflow/kfctl/releases/download/v1.2.0/kfctl_v1.2.0-0-gbc038f9_linux.tar.gz" | tar xz -C /tmp
    - mv /tmp/kfctl /usr/bin
    - sudo -H -u ec2-user bash -c "kfctl completion bash >> ~/.bash_completion"

    - curl -o /usr/bin/aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
    - chmod +x /usr/bin/aws-iam-authenticator

    - echo 'export PATH=$PATH:/usr/bin:$HOME/environment/repos/amazon-sagemaker-mlops/scripts' >> /home/ec2-user/.bashrc
    - echo 'export MWAA_ENVIRONMENT=shared-apache-airflow-environment' >> /home/ec2-user/.bashrc
    - echo 'export AWS_CLUSTER_NAME=shared-eks-cluster' >> /home/ec2-user/.bashrc

    - echo '=== CLEANING EC2-USER ==='
    - sudo -H -u ec2-user bash -c ". /etc/profile.d/bash_completion.sh"
    - sudo -H -u ec2-user bash -c ". /home/ec2-user/.bash_completion"
    - rm -rf /home/ec2-user/environment/README.md
    - chown -R ec2-user:ec2-user /home/ec2-user/

    - echo '=== REBOOT ==='
    - FILE=$(mktemp) && echo $FILE && echo '#!/bin/bash' > $FILE
    - echo 'reboot -f --verbose' >> $FILE && at now + 1 minute -f $FILE
    - echo "Bootstrap completed with return code $?"
